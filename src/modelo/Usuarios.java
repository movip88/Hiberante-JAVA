package modelo;
// Generated 29-ene-2019 19:38:18 by Hibernate Tools 4.3.1

import exception.ErroresValidacionCampos;
import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import java.util.regex.Pattern;

/**
 * Usuarios generated by hbm2java
 */
public class Usuarios implements java.io.Serializable {

    private Integer id;
    private String nombre;
    private String apellidos;
    private String dni;
    private String matricula;
    private String pass;
    private Integer tipoUsuario;
    private Date ultimoAcceso;
    private Set expedienteses = new HashSet(0);

    public Usuarios() {
    }

    public Usuarios(String matricula, String pass) {
        this.matricula = matricula;
        this.pass = pass;
    }

    public Usuarios(String nombre, String apellidos, String dni, String matricula, String pass, Integer tipoUsuario, Date ultimoAcceso, Set expedienteses) {
        this.nombre = nombre;
        this.apellidos = apellidos;
        this.dni = dni;
        this.matricula = matricula;
        this.pass = pass;
        this.tipoUsuario = tipoUsuario;
        this.ultimoAcceso = ultimoAcceso;
        this.expedienteses = expedienteses;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNombre() {
        return this.nombre;
    }

    /**
     * Esta metodo puede generar una excepcion ya que el string introducido
     * puede tener una largada maxima de 25
     *
     * @param - String
     * @throws ErroresValidacionCampos
     */
    public void setNombre(String nombre) throws ErroresValidacionCampos {
        if (nombre.length() > ErroresValidacionCampos.NOMBRE_APELLIDOS_USEUARIO) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.NOMBRE_APELLIDOS_USEUARIO, ErroresValidacionCampos.ERROR_LENTH);
        }
        this.nombre = nombre;
    }

    public String getApellidos() {
        return this.apellidos;
    }

    /**
     * Esta metodo puede generar una excepcion ya que el string introducido
     * puede tener una largada maxima de 25
     *
     * @param - String
     * @throws ErroresValidacionCampos
     */
    public void setApellidos(String apellidos) throws ErroresValidacionCampos {
        if (apellidos.length() > ErroresValidacionCampos.NOMBRE_APELLIDOS_USEUARIO) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.NOMBRE_APELLIDOS_USEUARIO, ErroresValidacionCampos.ERROR_LENTH);
        }
        this.apellidos = apellidos;
    }

    public String getDni() {
        return this.dni;
    }

    /**
     * Esta metodo puede generar una excepcion ya que comprueva que le formato
     * del DNI se un formato correcto
     *
     * @param - String
     * @throws ErroresValidacionCampos
     */
    public void setDni(String dni) throws ErroresValidacionCampos {
        if (dni.length() > ErroresValidacionCampos.DNI) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.DNI, ErroresValidacionCampos.ERROR_LENTH);
        } else if (!Pattern.matches("\\d{8}[A-HJ-NP-TV-Z]", dni)) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.ERROR_DNI_FORMAT);
        }
        this.dni = dni;
    }

    public String getMatricula() {
        return this.matricula;
    }

    /**
     * Esta metodo puede generar una excepcion ya que el string introducido
     * puede tener una largada maxima de 6
     *
     * @param - String
     * @throws ErroresValidacionCampos
     */
    public void setMatricula(String matricula) throws ErroresValidacionCampos {
        if (matricula.length() > ErroresValidacionCampos.MATRICULA_CP) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.MATRICULA_CP, ErroresValidacionCampos.ERROR_LENTH);
        }
        this.matricula = matricula;
    }

    /**
     * Esta metodo puede generar una excepcion ya que el string introducido
     * puede tener una largada maxima de 8
     *
     * @param - String
     * @throws ErroresValidacionCampos
     */
    public String getPass() {
        return this.pass;
    }

    public void setPass(String pass) throws ErroresValidacionCampos {
        if (pass.length() > ErroresValidacionCampos.PASS) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.PASS, ErroresValidacionCampos.ERROR_LENTH);
        }
        this.pass = pass;
    }

    public Integer getTipoUsuario() {
        return this.tipoUsuario;
    }

    public void setTipoUsuario(Integer tipoUsuario) throws ErroresValidacionCampos {
        if (tipoUsuario < 1 || tipoUsuario > 3) {
            throw new ErroresValidacionCampos(ErroresValidacionCampos.USER_TYPE_ERROR);
        }
        this.tipoUsuario = tipoUsuario;
    }

    public Date getUltimoAcceso() {
        return this.ultimoAcceso;
    }

    public void setUltimoAcceso(Date ultimoAcceso) {
        this.ultimoAcceso = ultimoAcceso;
    }

    public Set getExpedienteses() {
        return this.expedienteses;
    }

    public void setExpedienteses(Set expedienteses) {
        this.expedienteses = expedienteses;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Usuarios other = (Usuarios) obj;
        if (!Objects.equals(this.matricula, other.matricula)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Id usuario: " + id
                + "\nNombre usuario: " + nombre
                + "\nApellidos: " + apellidos
                + "\nDNI: " + dni
                + "\nMatricula usuario: " + matricula
                + "\nContrase√±a: " + pass
                + "\nTipo usuraio: " + tipoUsuario
                + "\nFecha ultimo acceso: " + ultimoAcceso;
    }

}
